let files={jwt_secret:path.join(__dirname,"jwt-secret.conf"),sql_config:path.join(__dirname,"sql.conf"),sms_config:path.join(__dirname,"sms.conf"),email_config:path.join(__dirname,"email.conf")};if(!fs.existsSync(files.sms_config))throw exports.sms={},new Error("\nAn SMS configuration file is required so as to send SMS messages".err+"\nTo do this, create a ".yell+"sms.conf"+" file in the ".yell+"config"+" folder of your project with the content:".yell+'\n\nmodule.exports = \n{\n\t"key"\t    \t: "SMS_DEVELOPER_KEY"\n\t,"password"\t    : "SMS_PASSWORD"\n}\n\t');if(exports.sms=require(files.sms_config,"utf8"),c_log("\n✔".succ+"  Loaded the user defined SMS configuration file".info),!fs.existsSync(files.sql_config))throw exports.sql={},new Error("\nAn sql configuration file is required so as to achieve a connection to an sql database.".err+"\nTo do this, create an ".yell+"sql.conf"+" file in the ".yell+"config"+" folder of your project with content in the following format.".yell+"\n\nmodule.exports = \n{\n\tuser        : 'YOUR_SQL_DB_USERNAME',\n\tpassword    : 'YOUR_SQL_DB_PASSWORD',\n\tdatabase    : 'YOUR_DATABSE_NAME',\n\textras      : \n\t\t\t\t{\n\t\t\t\t\tdialect     : 'postgres',   // mssql|postgres|mysql|sqlite\n\t\t\t\t\thost        : 'localhost',\n\t\t\t\t\tlogging     : true,\n\t\t\t\t\tpool        :\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmax     : 100, \n\t\t\t\t\t\t\t\t\tmin     : 3, \n\t\t\t\t\t\t\t\t\tacquire : 30000,  \n\t\t\t\t\t\t\t\t\tidle    : 10000 \n\t\t\t\t\t\t\t\t}\n\t\t\t\t}\n};\n/*# The \"port\" parameter can be added to the extras object for non default ports */\n\t");if(exports.sql=require(files.sql_config,"utf8"),c_log("\n✔".succ+"  Loaded the user defined sql connection definition file".info),!fs.existsSync(files.jwt_secret))throw new Error("A ".err+"jwt-secret.conf"+" file containing a JWT signing key is required for your access tokens".err+"\n\nPlease create a ".yell+"jwt-secret.conf"+" file in the config folder of your project.".yell+"\n\nPlease add a strong and very lengthy random key into the ".info+"jwt-secret.conf"+" file to protect your login sessions".info);if(exports.secret=fs.readFileSync(files.jwt_secret,"utf8"),c_log("\n✔".succ+"  Loaded the user defined JWT signing key".info),!fs.existsSync(files.email_config))throw exports.sms={},new Error("\nAn email configuration file is required so as to send email messages".err+"\nTo do this, create a ".yell+"email.conf"+" file in the ".yell+"config"+" folder of your project with the content:".yell+"\ne.g. For mail via gmail, use:".info+"\n\nmodule.exports = \n{\n\tservice: 'gmail',\n\tauth: {\n\t  user: 'youremail@gmail.com',\n\t  pass: 'yourpassword'\n\t}\n}\n"+"\nPlease visit https://nodemailer.com/about/ for information on other email configuration options\n\n".yell);exports.email=require(files.email_config,"utf8"),c_log("\n✔".succ+"  Loaded the user defined email configuration file".info);